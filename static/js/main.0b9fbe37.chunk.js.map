{"version":3,"sources":["components/header.jsx","reducers/GlobalReducer.jsx","contexts/GlobalContext.jsx","components/balance.jsx","components/incomes-expenses.jsx","components/transaction-item.jsx","components/transaction-list.jsx","components/transaction-form.jsx","App.js","index.js"],"names":["Header","GlobalReducer","state","action","type","transactions","filter","transaction","id","payload","initialState","GlobalContext","createContext","GlobalContextProvider","props","useReducer","localData","localStorage","getItem","JSON","parse","dispatch","useEffect","setItem","stringify","Provider","value","deleteTransaction","addTransaction","children","Balance","useContext","console","log","total","map","amount","reduce","accumulation","item","toFixed","IncomesExpenses","amounts","income","expense","className","Math","abs","TransactionItem","sign","description","onClick","TransactionList","key","TransactionForm","useState","setDescription","setAmount","onSubmit","e","preventDefault","uuid","parseInt","htmlFor","onChange","target","placeholder","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0b9fbe37.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div>\r\n      <h1>Expense Tracker</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","export const GlobalReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'DELETE_TRANSACTION':\r\n      return {\r\n        ...state,\r\n        transactions: state.transactions.filter(\r\n          (transaction) => transaction.id !== action.payload\r\n        ),\r\n      };\r\n    case 'ADD_TRANSACTION':\r\n      return {\r\n        ...state,\r\n        transactions: [...state.transactions, action.payload],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { createContext, useReducer, useEffect } from 'react';\r\n// import { v4 as uuid } from 'uuid';\r\nimport { GlobalReducer } from '../reducers/GlobalReducer';\r\n\r\n// initial state\r\nconst initialState = {\r\n  transactions: [\r\n    // { id: uuid(), description: 'food', amount: 30 },\r\n    // { id: uuid(), description: 'beverage', amount: -10 },\r\n  ],\r\n};\r\n\r\n// global context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n// provider component\r\nconst GlobalContextProvider = (props) => {\r\n  const [state, dispatch] = useReducer(GlobalReducer, initialState, () => {\r\n    const localData = localStorage.getItem('state');\r\n    return localData ? JSON.parse(localData) : { transactions: [] };\r\n  });\r\n\r\n  // actions\r\n  const deleteTransaction = (id) => {\r\n    dispatch({\r\n      type: 'DELETE_TRANSACTION',\r\n      payload: id,\r\n    });\r\n  };\r\n\r\n  const addTransaction = (transaction) => {\r\n    dispatch({\r\n      type: 'ADD_TRANSACTION',\r\n      payload: transaction,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('state', JSON.stringify(state));\r\n  }, [state]);\r\n\r\n  return (\r\n    <div>\r\n      <GlobalContext.Provider\r\n        value={{\r\n          transactions: state.transactions,\r\n          deleteTransaction,\r\n          addTransaction,\r\n        }}\r\n      >\r\n        {props.children}\r\n      </GlobalContext.Provider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GlobalContextProvider;\r\n","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../contexts/GlobalContext';\r\n\r\nconst Balance = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n\r\n  console.log(transactions);\r\n\r\n  const amounts = transactions.map((transaction) => transaction.amount);\r\n  const total = amounts\r\n    .reduce((accumulation, item) => (accumulation += item), 0)\r\n    .toFixed(1);\r\n\r\n  return (\r\n    <div>\r\n      <h4>Balance</h4>\r\n      <h1>Rp {total}</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Balance;\r\n","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../contexts/GlobalContext';\r\n\r\nconst IncomesExpenses = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n\r\n  const amounts = transactions.map((transaction) => transaction.amount);\r\n\r\n  const income = amounts\r\n    .filter((item) => item > 0)\r\n    .reduce((accumulation, item) => (accumulation += item), 0)\r\n    .toFixed(1);\r\n\r\n  const expense = amounts\r\n    .filter((item) => item < 0)\r\n    .reduce((accumulation, item) => (accumulation += item), 0)\r\n    .toFixed(1);\r\n\r\n  return (\r\n    <div className=\"inc-exp-container\">\r\n      <div>\r\n        <h4>Income</h4>\r\n        <p className=\"money plus\">Rp {income}</p>\r\n      </div>\r\n      <div>\r\n        <h4>Expense</h4>\r\n        <p className=\"money minus\">Rp {Math.abs(expense)}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IncomesExpenses;\r\n","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../contexts/GlobalContext';\r\n\r\nconst TransactionItem = (props) => {\r\n  const { deleteTransaction } = useContext(GlobalContext);\r\n\r\n  const sign = props.transaction.amount < 0 ? '-' : '';\r\n  return (\r\n    <div>\r\n      <li className={props.transaction.amount < 0 ? 'minus' : 'plus'}>\r\n        {props.transaction.description}{' '}\r\n        <span>\r\n          {' '}\r\n          {sign} Rp {Math.abs(props.transaction.amount)}{' '}\r\n        </span>\r\n        <button\r\n          className=\"delete-btn\"\r\n          onClick={() => deleteTransaction(props.transaction.id)}\r\n        >\r\n          x\r\n        </button>\r\n      </li>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TransactionItem;\r\n","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../contexts/GlobalContext';\r\nimport TransactionItem from './transaction-item';\r\n\r\nconst TransactionList = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n\r\n  return (\r\n    <div>\r\n      <h3>history</h3>\r\n      <ul className=\"list\">\r\n        {transactions.map((transaction) => (\r\n          <TransactionItem key={transaction.id} transaction={transaction} />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TransactionList;\r\n","import React, { useState, useContext } from 'react';\r\nimport { GlobalContext } from '../contexts/GlobalContext';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nconst TransactionForm = () => {\r\n  const [description, setDescription] = useState('');\r\n  const [amount, setAmount] = useState(0);\r\n\r\n  const { addTransaction } = useContext(GlobalContext);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    addTransaction({\r\n      id: uuid(),\r\n      description,\r\n      amount: parseInt(amount),\r\n    });\r\n    setDescription('');\r\n    setAmount('');\r\n  };\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"description\">description</label>\r\n          <input\r\n            type=\"text\"\r\n            value={description}\r\n            onChange={(e) => setDescription(e.target.value)}\r\n            placeholder=\"enter description here...\"\r\n          />\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"amount\">\r\n            Amount\r\n            <br />\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            value={amount}\r\n            onChange={(e) => setAmount(e.target.value)}\r\n            placeholder=\"enter the amount here...\"\r\n          />\r\n        </div>\r\n        <button className=\"btn\">Add transaction</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TransactionForm;\r\n","import React from 'react';\nimport Header from './components/header';\n\nimport './App.css';\nimport Balance from './components/balance';\nimport IncomesExpenses from './components/incomes-expenses';\nimport GlobalContextProvider from './contexts/GlobalContext';\nimport TransactionList from './components/transaction-list';\nimport TransactionForm from './components/transaction-form';\n\nfunction App() {\n  return (\n    <div>\n      <GlobalContextProvider>\n        <Header />\n        <div className=\"container\">\n          <Balance />\n          <IncomesExpenses />\n          <TransactionList />\n          <TransactionForm />\n        </div>\n      </GlobalContextProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}